{"version":3,"sources":["reportWebVitals.js","App.js","JavaCompile.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","className","style","cursor","onClick","window","location","href","color","fontSize","textDecoration","to","CodeComp","state","hide1","hide2","hide3","hide4","hide5","backgroundColor","React","Component","JavaCompile","ReactDOM","render","StrictMode","path","component","element","document","getElementById"],"mappings":"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","file":"static/js/main.3ad9e6e6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\nimport {Link} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div>\n            <h4 className=\"App p-5\">\n                <code>Welcome to Muhamed Halimi's portfolio</code>\n            </h4>\n            <div className=\"container-fluid ps-5 pe-5\">\n                <p>\n                    <code>Full stack apps</code>\n                </p>\n                <div className=\"row row-cols-2\">\n                    <div className=\"col\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Ride Sharing</h5>\n                                <p className=\"card-text\" style={{cursor:\"pointer\"}} onClick = {() => {window.location.href = \"https://mhal1.github.io/ridesharing/\"}}>Explore <span>&#8594;</span></p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col\">\n                        <div className=\"card mb-5\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Moud Oils</h5>\n                                <p className=\"card-text\">Explore <span>&#8594;</span> </p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div className=\"container-fluid ps-5 pe-5\">\n                <p>\n                    <code>Java problems solved</code>\n                </p>\n                <div className=\"row row-cols-2\">\n                    <div className=\"col\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Trailing zeros for factorial number</h5>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col\">\n                        <div className=\"card mb-5\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">int32 to IPv4</h5>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Number generation with assigned probabilities</h5>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col\">\n                        <div className=\"card\">\n                            <div className=\"card-body bg-warning\">\n                                <Link style={{color:'black',fontSize: '21px', textDecoration: 'none'}}\n                                      className=\"bd-highlight\" to='/java'\n                                >Explore all Java projects <span>&#8594;</span></Link>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n);\n}\n\nexport default App;\n","import './App.css';\nimport React from \"react\";\n\nclass CodeComp extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            hide1: true,\n            hide2: true,\n            hide3: true,\n            hide4: true,\n            hide5: true\n\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"App p-5\">\n                    <code>Welcome to Java projects</code>\n                </h1>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-2\">\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Trailing Zeros</li>\n                                <li className=\"list-group-item\">int32 to IPv4</li>\n                                <li className=\"list-group-item\">Number generation with assigned probabilities</li>\n                                <li className=\"list-group-item\">A fourth item</li>\n                                <li className=\"list-group-item\">And a fifth one</li>\n                            </ul>\n\n                        </div>\n\n                        <div className=\"col-sm-10\">\n                            <div className=\"container-fluid pe-5\">\n                                <div className=\"row row-cols-1\">\n                                    <div className=\"col\">\n                                        <div className=\"mb-5\">\n                                            <h3 className=\"card-title mb-4 text-center\">Trailing zeros in factorial\n                                                number</h3>\n                                            <p>\n                                                This will return the number of zeros at the end of the factorial of a\n                                                number n <span\n                                                style={{color: 'blue'}}> without actually calculating the factorial.</span>\n                                                <br/>\n                                                <br/>\n                                                If we look at first few factorial numbers we start to see a pattern\n                                                emerge:\n                                                <br/>\n                                                <p className=\"text-center\">10! = <span\n                                                    style={{backgroundColor: 'lightblue'}}>10</span> x 9 x 8 x 7 x 6\n                                                    x <span\n                                                        style={{backgroundColor: 'lightblue'}}>5</span> x 4 x 3 x <span\n                                                        style={{backgroundColor: 'lightblue'}}>2</span> x 1 </p>\n                                                <p className=\"text-center\">10! = 9 x 8 x 7 x 6 x 4 x 3 x 1 x <span\n                                                    style={{backgroundColor: 'lightblue'}}>10</span> x <span\n                                                    style={{backgroundColor: 'lightblue'}}>10</span></p>\n                                                This gives us two zeros at the end of 10! as any number n multiplied by\n                                                10 will have\n                                                a zero at the end, here we have two tens so two zeros. The rule is\n                                                everytime we\n                                                multiply by 10 we will have another zero at the end.\n                                                <br/>\n                                                <p className=\"text-center\">20! = <span\n                                                    style={{backgroundColor: 'lightblue'}}>20</span> x 19 x 18 x 17 x 16\n                                                    x <span\n                                                        style={{backgroundColor: 'lightblue'}}>15</span> x 14 x 13 x 12\n                                                    x 11 x 10! </p>\n                                                <p className=\"text-center\">20! = <span\n                                                    style={{backgroundColor: 'lightblue'}}>2</span> x <span\n                                                    style={{backgroundColor: 'lightblue'}}>10</span> x 19 x 18 x 17 x 16\n                                                    x 3 x <span\n                                                        style={{backgroundColor: 'lightblue'}}>5</span> x 14 x 13 x 12 x\n                                                    11 x 10! </p>\n                                                <p className=\"text-center\">20! = 19 x 18 x 17 x 16 x 14 x 13 x 12 x 11 x\n                                                    3 x <span\n                                                        style={{backgroundColor: 'lightblue'}}>10</span> x <span\n                                                        style={{backgroundColor: 'lightblue'}}>10</span> x 10! </p>\n                                                Now we have two more tens and also two from 10! which means we have 4\n                                                zeros at the\n                                                end of 20!. Another rule is that for every 5 we get in our multiples, we\n                                                will always\n                                                have a 2 which we can multiply it with to get a 10.\n                                                <span style={{color: 'blue'}}> Therefore we see that for every 5 we have in our number we will add one zero to the end of its factorial. </span>\n                                                <br/>\n                                                <br/>\n                                                Interestingly, once we reach 25! we will have an extra 5 multiple\n                                                because 25 = 5 x\n                                                5, and we will have another 2 which will give us another factor of 10.\n                                                We will need to account for this in our approach.\n                                                If we then continue and look at 125! this will give an additional\n                                                multiple of 5\n                                                because 125 = 5 x 5 x 5, so we need to include this too.\n                                                <br/>\n                                                <br/>\n                                                So now another pattern emerges (keeping in mind every 5 multiple will\n                                                multiply with\n                                                a 2 to give us a factor of 10, and so another zero):\n                                                <br/>\n                                                <p className=\"text-center\">Every 5 = 5 x 1 <span\n                                                    style={{color: 'blue'}}> (+1 zero)</span></p>\n                                                <p className=\"text-center\">Every 25 = 5 x 5 <span\n                                                    style={{color: 'blue'}}> (+2 zeros)</span>\n                                                </p>\n                                                <p className=\"text-center\">Every 125 = 5 x 5 x 5 <span\n                                                    style={{color: 'blue'}}> (+3 zeros)</span>\n                                                </p>\n                                                <p className=\"text-center\">Every 625 = 5 x 5 x 5 x 5 <span\n                                                    style={{color: 'blue'}}> (+4 zeros)</span>\n                                                </p>\n                                                <p className=\"text-center\">...</p>\n                                                We see that we will have extra zeros for every multiple of 5 which fits\n                                                into our\n                                                number.\n                                                Therefore, loop through for each multiple of 5^n and calculate how many\n                                                of those fit\n                                                in our number, then this amount will be the\n                                                number of zeros to add.\n\n\n                                            </p>\n                                            <h6 className=\"mb-2\"> Java Solution:</h6>\n                                            <div className=\"container-fluid\">\n                                                <div className=\"row\">\n                                                    <div\n                                                        className=\"col-sm-9 offset-sm-3 col-md-7 offset-md-3 col-lg-5 offset-sm-4\">\n                                                        <code>\n                                    <pre>\n                                        {`\npublic static int zeros(int n) {\n        if (n == 0) {\n            return 0;\n        } else if (n <= 5) {\n            return 1;\n        } else {\n            int trailingZeros = 0;\n            for (int i = 5; i < n; i *= 5) {\n                int remainder = n % i;\n                int no5 = n - remainder;\n                int thisManyFit = no5 / i;\n                trailingZeros += thisManyFit;\n            }\n            return trailingZeros;\n\n        }\n    }\n}\n                                      `}\n                                    </pre>\n                                                        </code>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col\">\n                                        <div className=\"mb-5\">\n                                            <h5 className=\"card-title text-center\">int32 to IPv4</h5>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col\">\n                                        <div className=\"mb-5\">\n                                            <h5 className=\"card-title text-center\">Number generation with assigned\n                                                probabilities</h5>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n    </div>\n    )\n    }\n}\n\nclass JavaCompile extends React.Component {\n\n\n    render() {\n        return (\n            <div>\n                {<CodeComp/>}\n            </div>\n        );\n    }\n}\n\nexport default JavaCompile;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport App from \"./App\";\nimport JavaCompile from \"./JavaCompile\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <div>\n            <Routes>\n                <Route path='/' component={<App/>} element={<App/>} />\n                <Route path='/java' component={<App/>} element={<JavaCompile/>} />\n            </Routes>\n            </div>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}